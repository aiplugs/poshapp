<template id="data-viewer">
    <div>
        <div v-for="datum in data" :key="datum.$clixml">
            <p v-if="datum.value === null">NULL</p>
            <p v-else-if="typeof datum.value == 'string'||typeof datum.value == 'number'">{{datum.value}}</p>
            <p v-else-if="typeof datum.value == 'object' && datum.value.constructor == Date">{{datum.value.toLocaleString()}}</p>
            <v-simple-table v-else-if="typeof datum.value == 'object' && Array.isArray(datum.value)">
                <template v-slot:default>
                    <thead>
                        <tr>
                            <th v-for="key in getHeaders(datum.value)" :key="key">{{key}}</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(item, index) in datum.value" :key="index">
                            <td v-for="key in Object.keys(item)">{{item[key]}}</td>
                        </tr>
                    </tbody>
                </template>
            </v-simple-table>
            <v-simple-table v-else-if="typeof datum.value == 'object'">
                <template v-slot:default>
                    <thead>
                        <tr>
                            <th class="text-left">Name</th>
                            <th class="text-left">Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="key in Object.keys(datum.value)" :key="key">
                            <td>{{key}}</td>
                            <td>{{datum.value[key]}}</td>
                        </tr>
                    </tbody>
                </template>
            </v-simple-table>
        </div>
    </div>
</template>
<script>
    Vue.component('data-viewer', {
        template: '#data-viewer',
        props: ['data'],
        methods: {
            getHeaders(array) {
                return [...new Set(array.map(item => Object.keys(item)).flat())];
            }
        }
    })
</script>