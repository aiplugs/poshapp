<template id="powershell-ui-prompt-for-credential-component">
    <v-dialog v-model="dialog" max-width="600px" persistent>
        <v-card>
            <v-card-title class="headline grey lighten-2" primary-title>
                {{caption}}
            </v-card-title>
            <v-card-text>
                <v-container>
                    <p style="white-space: pre-wrap">{{message}}</p>
                    <v-form ref="form" v-model="valid">
                        <v-text-field label="Username"
                                      v-model="username"
                                      :rules="[v => !!v || 'Username is required']"
                                      required></v-text-field>
                        <v-text-field label="Password"
                                      type="password"
                                      v-model="password"
                                      :rules="[v => !!v || 'Password is required']"
                                      required></v-text-field>
                    </v-form>
                </v-container>
            </v-card-text>

            <v-divider></v-divider>

            <v-card-actions>
                <v-spacer></v-spacer>
                <v-btn text color="primary"
                       v-on:click="handlePromptForCredential"
                       :disabled="!valid">
                    OK
                </v-btn>
            </v-card-actions>
        </v-card>
    </v-dialog>
</template>
<script>
    Vue.component('powershelluipromptforcredential', {
        template: '#powershell-ui-prompt-for-credential-component',
        data() {
            return {
                dialog: false,
                caption: null,
                message: null,
                username: null,
                password: null,
                valid: false,
                forGit: false,
            }
        },
        methods: {
            async handlePromptForCredential() {
                const methodName = this.forGit ? "PromptForGitCredential" : "PromptForCredential";
                await this.$signalr.invoke(methodName, this.username, this.password);
                this.dialog = false;
                this.valid = true;
            }
        },
        mounted() {
            this.$signalr.on("PromptForCredential", (caption, message, userName, targetName) => {
                this.dialog = true;
                this.forGit = false;
                this.caption = caption;
                this.message = message;
                this.$refs.form.reset();
                this.username = userName;
                this.password  = null;
            })
            this.$signalr.on("PromptForCredentialWithType", (caption, message, userName, targetName, allowedCredentialTypes) => {
                this.dialog = true;
                this.forGit = false;
                this.caption = caption;
                this.message = message;
                this.$refs.form.reset();
                this.username = userName;
                this.password  = null;
            })
            this.$signalr.on("PromptForGitCredential", (url, usernameFromUrl) => {
                this.dialog = true;
                this.forGit = true;
                this.caption = "Git Credential";
                this.message = url;
                this.$refs.form.reset();
                this.username = usernameFromUrl;
                this.password = null;
            })
            this.$signalr.on("WriteDebugLine", value => {
                console.log(value);
            })
            this.$signalr.on("WriteVerboseLine", value => {
                console.log(value);
            })
            this.$signalr.on("WriteWarningLine", value => {
                console.log(value);
            })
        }
    })
</script>