<template id="powershell-ui-status-component">
    <div class="d-flex">
        <span :title="text" class="d-flex align-center">
            <v-icon small :class="color">{{icon}}</v-icon>
        </span>
        <v-dialog :value="status === 'close'" width="600">
            <v-card>
                <v-card-title>Connectioin Error</v-card-title>
                <v-card-text>
                    Cannot connect POSH App backend service.
                </v-card-text>
                <v-card-actions>
                    <v-spacer></v-spacer>
                    <v-btn text v-on:click="reconnect">Reconnect</v-btn>
                </v-card-actions>
            </v-card>
        </v-dialog>
    </div>
</template>
<script>
    Vue.component('powershelluistatus', {
        template: '#powershell-ui-status-component',
        data() {
            return {
                dialog: false
            }
        },
        computed: {
            ...Vuex.mapState('signalr', ['status']),
            text() {
                switch (this.status) {
                    case 'connected': return 'Connected';
                    case 'connecting': return 'Connecting...';
                    case 'reconnecting': return 'Reconnecting...';
                    case 'faild': return 'Faild';
                    case 'close': return 'Close';
                    default: return 'Unknown';
                }
            },
            icon() {
                switch (this.status) {
                    case 'connected': return 'mdi-circle-outline';
                    case 'connecting': return 'mdi-dots-horizontal';
                    case 'reconnecting': return 'mdi-dots-horizontal';
                    case 'faild': return 'md mdi-circle-off-outline';
                    case 'close': return 'md mdi-circle-off-outline';
                    default: return 'md mdi-circle-off-outline';
                }
            },
            color() {
                return this.status !== 'connected' ? ['red--text'] : [];
            }
        },
        methods: {
            ...Vuex.mapActions('signalr',['reconnect'])
        }
    })
</script>